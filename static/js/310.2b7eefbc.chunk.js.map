{"version":3,"file":"static/js/310.2b7eefbc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","redux/root/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"err-title\":\"ErrorMessage_err-title__bQm71\"};","import { useSelector } from \"react-redux\"\nimport css from \"./ErrorMessage.module.css\"\nimport { selectError } from \"redux/root/selectors\"\n\nexport const ErrorMessage = () => {\n    const error = useSelector(selectError)\n    return (\n        <>\n            {error && <h2 className={css[\"err-title\"]}>{`ERROR: ${error}`}</h2>}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Dna } from 'react-loader-spinner'\nimport css from \"./Loader.module.css\"\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/root/selectors';\n\nexport const Loader = () => {\n    const render = useSelector(selectIsLoading)\n    return (\n        <Dna\n            visible={render}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n        />)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__HJPSk\"};","import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n[ selectContacts, selectFilter],\n  (contacts, filter) => {\n   return contacts.filter(contact => contact.name.toLowerCase()\n    .includes(filter.toLowerCase()))\n }\n)","\nimport { useState } from 'react';\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\nimport {Button, TextField, Box} from '@mui/material'\n\nexport const ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const setState = {\n    name: setName,\n    number: setNumber\n  }\n  \n  const handleChange = e => {\n        const { name, value } = e.target;\n        setState[name](value);\n  }\n\n  const reset= ()=> {\n    setName(\"\")\n    setNumber(\"\")\n  }\n  \n  const findContact = name => contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!name || !number) return Notiflix.Notify.failure(`Fill in all fields`);\n    if (findContact(name)) return Notiflix.Notify.failure(`${name} is already in contacts`);\n    dispatch(\n      addContact({\n      name,\n      number\n    }));\n    reset()\n   \n   };\n\n  \n  return (\n       <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Box component=\"form\" onChange={handleChange} onSubmit={handleSubmit} >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яіїєА-ЯІЇЄ]+(([' \\-][a-zA-Zа-яіїєА-ЯІЇЄ ])?[a-zA-Zа-яіїєА-ЯІЇЄ]*)*$\"\n              value={name}\n              autoComplete=\"name\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              value={number}\n              label=\"Number\"\n              type=\"tel\"\n              id=\"number\"\n              autoComplete=\"number\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n        )\n}\n","import { ListItem, ListItemText, IconButton } from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const onDel = () => dispatch(deleteContact(id))\n    return (\n        <ListItem\n            key={id}\n            secondaryAction={\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDel}>\n                    <DeleteIcon />\n                </IconButton>}\n        >\n            <ListItemText primary={`${name}: ${number}`} />\n        </ListItem>\n    )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n}","import { List } from '@mui/material';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts)\n    return (\n    <>\n        {visibleContacts && \n        <List >\n            {visibleContacts.map(({id, name, number }) => {\n                return <ContactItem key={id} id={id} name={name} number={number} />\n            })}\n        </List >\n            }\n    </>\n    )\n    \n}\n\n\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport {FilterAlt, FilterAltOff} from '@mui/icons-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter) || \"\";\n    const dispatch = useDispatch();\n    const handleChange = (e) => dispatch(setFilter(e.target.value))\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Typography color=\"#1976d2\" component=\"h1\" variant=\"h6\" sx={{ mb: 1 }} >\n            Find contact by name\n          </Typography>\n      <TextField\n        \n        id=\"filter\"\n        label=\"Filter\"\n        variant=\"outlined\"\n        value={filter}\n        onChange={handleChange}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">\n            {filter.length !== 0 && <FilterAlt sx={{ color: '#1976d2' }} />}\n            {filter.length === 0 && <FilterAltOff />}\n            </InputAdornment>,\n          }}\n      />\n      </Box>\n    )\n}\n\n","import Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport css from \"./Contacts.module.css\"\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\"\nimport { Filter } from '../components/Filter/Filter'\nimport { Loader } from \"../components/Loader/Loader\";\nimport { ErrorMessage } from \"../components/ErrorMessage/ErrorMessage\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nconst defaultTheme = createTheme();\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"sm\">\n       <CssBaseline /> \n        <h1 className={css.title}>Phonebook</h1>\n        <h2 className={css.title}>Add contact</h2>\n        <Container component=\"section\" maxWidth=\"xs\">\n          <ContactForm />\n        </Container>\n        <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      <ErrorMessage/>\n      <Loader />\n      <ContactList />\n      </Container>  \n    </ThemeProvider>\n    )\n\n}\n\nexport default Contacts","export const selectIsLoading = state => state.root.isLoading;\nexport const selectError = state => state.root.error.message || state.root.error;\n"],"names":["ErrorMessage","error","useSelector","selectError","className","css","Loader","render","selectIsLoading","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","setState","Box","sx","display","flexDirection","alignItems","component","onChange","e","target","value","onSubmit","event","preventDefault","find","findContact","Notiflix","addContact","TextField","margin","required","fullWidth","id","label","pattern","autoComplete","autoFocus","type","Button","variant","mt","mb","ContactItem","ListItem","secondaryAction","IconButton","edge","onClick","deleteContact","Delete","ListItemText","primary","ContactList","visibleContacts","List","map","Filter","Typography","color","setFilter","InputProps","startAdornment","InputAdornment","position","length","FilterAlt","FilterAltOff","defaultTheme","createTheme","useEffect","fetchContacts","ThemeProvider","theme","Container","maxWidth","CssBaseline","root","isLoading","message"],"sourceRoot":""}