{"version":3,"file":"static/js/336.c007bb10.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts.module.css?8552","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\",\"title\":\"Contacts_title__HJPSk\"};","import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error?.message;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n[ selectContacts, selectFilter],\n  (contacts, filter) => {\n   return contacts.filter(contact => contact.name.toLowerCase()\n    .includes(filter.toLowerCase()))\n }\n)","\nimport { useState } from 'react';\n// import css from './ContactForm.module.css';\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst defaultTheme = createTheme();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const setState = {\n    name: setName,\n    number: setNumber\n  }\n  \n  const handleChange = e => {\n        const { name, value } = e.target;\n        setState[name](value);\n  }\n\n  const reset= ()=> {\n    setName(\"\")\n    setNumber(\"\")\n  }\n  \n  const findContact = name => contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!name || !number) return Notiflix.Notify.failure(`Fill in all fields`);\n    if (findContact(name)) return Notiflix.Notify.failure(`${name} is already in contacts`);\n    dispatch(\n      addContact({\n      name,\n      number\n    }));\n    reset()\n   \n   };\n\n  \n  return (\n      <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n           \n          <Typography component=\"h1\" variant=\"h5\" >\n            Add contact\n          </Typography>\n          <Box component=\"form\" onChange={handleChange} onSubmit={handleSubmit} sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яіїєА-ЯІЇЄ]+(([' \\-][a-zA-Zа-яіїєА-ЯІЇЄ ])?[a-zA-Zа-яіїєА-ЯІЇЄ]*)*$\"\n              value={name}\n              autoComplete=\"name\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              value={number}\n              label=\"Number\"\n              type=\"tel\"\n              id=\"number\"\n              autoComplete=\"number\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n        )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"list-item\":\"ContactItem_list-item__A8TMw\",\"contact-item\":\"ContactItem_contact-item__UfPOK\",\"del-btn\":\"ContactItem_del-btn__3fJus\"};","import css from './ContactItem.module.css'\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const onDel = () => dispatch(deleteContact(id))\n    return (\n        <li className={css[\"list-item\"]}>\n            <div className={css[\"contact-item\"]}>\n                <p>{name}: {number}</p>\n                <button type='button' className={css[\"del-btn\"]} onClick={onDel}>Delete</button>    \n            </div>    \n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n}","import css from './ContactList.module.css'\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts)\n    return (\n    <>\n        {visibleContacts && \n        <ul className={css.list}>\n            {visibleContacts.map(({id, name, number }) => {\n                return <ContactItem key={id} id={id} name={name} number={number} />\n            })}\n        </ul >\n            }\n    </>\n    )\n    \n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contact-form\":\"ContactForm_contact-form__1+2ej\",\"contact-label\":\"ContactForm_contact-label__DeBwX\",\"contact-input\":\"ContactForm_contact-input__AOTGb\",\"contact-btn\":\"ContactForm_contact-btn__0cjRR\"};","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from '../ContactForm/ContactForm.module.css'\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter) || \"\";\n    const dispatch = useDispatch();\n    const handleChange = (e) => dispatch(setFilter(e.target.value))\n    return (\n        <label className={css[\"contact-label\"]}>\n              Find contact by name    \n              <input\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={handleChange}\n                className={css[\"contact-input\"]}\n              />\n            </label>\n    )\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Dna } from 'react-loader-spinner'\nimport css from \"./Loader.module.css\"\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport const Loader = () => {\n    const render = useSelector(selectIsLoading)\n    return (\n        <Dna\n            visible={render}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n        />)\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"err-title\":\"ErrorMessage_err-title__bQm71\"};","import { useSelector } from \"react-redux\"\nimport css from \"./ErrorMessage.module.css\"\nimport { selectError } from \"redux/contacts/selectors\"\n\nexport const ErrorMessage = () => {\n    const error = useSelector(selectError)\n    return (\n        <>\n            {error && <h2 className={css[\"err-title\"]}>{`ERROR: ${error}`}</h2>}\n        </>\n    )\n}","import css from \"./Contacts.module.css\"\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\"\nimport { Filter } from '../components/Filter/Filter'\nimport { Loader } from \"../components/Loader/Loader\";\nimport { ErrorMessage } from \"../components/ErrorMessage/ErrorMessage\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <div className={css.container}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      <ErrorMessage/>\n      <Loader />\n      <ContactList />\n      </div>\n    )\n\n}\n\nexport default Contacts"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","message","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","defaultTheme","createTheme","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","setState","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","display","flexDirection","alignItems","Typography","variant","onChange","e","target","value","onSubmit","event","preventDefault","find","findContact","Notiflix","addContact","mt","TextField","margin","required","fullWidth","id","label","pattern","autoComplete","autoFocus","type","Button","mb","ContactItem","className","css","onClick","deleteContact","ContactList","visibleContacts","map","Filter","setFilter","Loader","render","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ErrorMessage","useEffect","fetchContacts"],"sourceRoot":""}