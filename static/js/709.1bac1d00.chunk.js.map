{"version":3,"file":"static/js/709.1bac1d00.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/SignUp/SignUp.js","pages/Register.jsx","redux/root/selectors.js","webpack://react-homework-template/./src/components/SignIn/Sign.module.css?dc48"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"err-title\":\"ErrorMessage_err-title__bQm71\"};","import { useSelector } from \"react-redux\"\nimport css from \"./ErrorMessage.module.css\"\nimport { selectError } from \"redux/root/selectors\"\n\nexport const ErrorMessage = () => {\n    const error = useSelector(selectError)\n    return (\n        <>\n            {error && <h2 className={css[\"err-title\"]}>{`ERROR: ${error}`}</h2>}\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Dna } from 'react-loader-spinner'\nimport css from \"./Loader.module.css\"\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from 'redux/root/selectors';\n\nexport const Loader = () => {\n    const render = useSelector(selectIsLoading)\n    return (\n        <Dna\n            visible={render}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"dna-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n        />)\n}\n","import Notiflix from 'notiflix';\nimport 'notiflix/src/notiflix.css';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport * as React from 'react';\nimport { Avatar, Button, TextField, Grid, Box, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport css from '../SignIn/Sign.module.css'\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const  name = data.get('userName').trim()\n    const  email = data.get('email').trim()\n    const  password = data.get('password').trim()\n    if (!name||!email||!password) return Notiflix.Notify.failure(`Fill in all fields`);\n    dispatch(\n      register({\n       name,\n       email,\n       password\n      })\n    );\n    \n  };\n\n  return (\n \n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <Box component=\"form\"  onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} >\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"userName\"\n                  required\n                  fullWidth\n                  id=\"userName\"\n                  label=\"User Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n             </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <NavLink className={css.navlink} to=\"/login\">\n                  Already have an account? Log in\n                </NavLink>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      \n  );\n}\n","import SignUp from '../components/SignUp/SignUp';\nimport { Loader } from \"../components/Loader/Loader\";\nimport { ErrorMessage } from \"../components/ErrorMessage/ErrorMessage\";\nimport Container from '@mui/material/Container'; \nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst defaultTheme = createTheme();\n\nexport default function Register() {\n  return (\n      <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n      <Loader />\n      <ErrorMessage/>\n      <SignUp/>\n   </Container>\n    </ThemeProvider>\n  );\n}","export const selectIsLoading = state => state.root.isLoading;\nexport const selectError = state => state.root.error.message || state.root.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"Sign_navlink__up3Ly\"};"],"names":["ErrorMessage","error","useSelector","selectError","className","css","Loader","render","selectIsLoading","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","SignUp","dispatch","useDispatch","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","component","variant","onSubmit","event","preventDefault","data","FormData","currentTarget","name","get","trim","email","password","Notiflix","register","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","mb","justifyContent","to","defaultTheme","createTheme","Register","ThemeProvider","theme","Container","maxWidth","CssBaseline","state","root","isLoading","message"],"sourceRoot":""}